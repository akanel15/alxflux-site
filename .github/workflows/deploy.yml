name: Deploy AlxFlux Infrastructure

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build Astro site
        run: npm run build
        
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.OC_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts
          
      - name: Create deployment directory
        run: |
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} 'mkdir -p ~/alxflux-site'
          
      - name: Deploy infrastructure files
        run: |
          # Copy all infrastructure files
          rsync -avz --delete \
            --exclude='.git*' \
            --exclude='node_modules' \
            --exclude='.env*' \
            ./ ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:~/alxflux-site/
            
      - name: Create environment file
        run: |
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} 'cd ~/alxflux-site && cat > .env << EOF
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
          EOF'
          
      - name: Deploy services
        run: |
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} 'cd ~/alxflux-site && 
            echo "ðŸ›‘ Stopping existing services..." &&
            docker-compose down --timeout 30 || true &&
            echo "ðŸŸ¢ Starting services with new config..." &&
            docker-compose up -d &&
            echo "âœ… Deployment complete!"'
